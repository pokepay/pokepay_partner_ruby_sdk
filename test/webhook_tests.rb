# coding: utf-8
# DO NOT EDIT: File is generated by code generator.

require 'minitest/autorun'
require 'securerandom'
require "pokepay_partner_ruby_sdk"
require "inifile"

$client = Pokepay::Client.new(File.expand_path("~/.pokepay/test-config.ini"))
$inifile = IniFile.load(File.expand_path("~/.pokepay/test-config.ini"))

class WebhookTests < Minitest::Test
  def test0
    list = $client.send(Pokepay::Request::ListWebhooks.new())
    for row in list.rows do 
      $client.send(Pokepay::Request::DeleteWebhook.new(
        row.id
      ))
    end
    webhook1 = $client.send(Pokepay::Request::CreateWebhook.new(
      "bulk_shops",
      "http://localhost/bulk_shops"
    ))
    assert_equal("coilinc", webhook1.organization_code)
    assert_equal("bulk_shops", webhook1.task)
    assert_equal("http://localhost/bulk_shops", webhook1.url)
    assert_equal(true, webhook1.is_active)
    assert_equal("application/json", webhook1.content_type)
    webhook2 = $client.send(Pokepay::Request::CreateWebhook.new(
      "process_user_stats_operation",
      "http://localhost/process_user_stats_operation"
    ))
    assert_equal("coilinc", webhook2.organization_code)
    assert_equal("process_user_stats_operation", webhook2.task)
    assert_equal("http://localhost/process_user_stats_operation", webhook2.url)
    assert_equal(true, webhook2.is_active)
    assert_equal("application/json", webhook2.content_type)
    list2 = $client.send(Pokepay::Request::ListWebhooks.new())
    assert_equal(2, list2.count)
    assert_equal(webhook2.id, list2.rows[0].id)
    assert_equal(webhook1.id, list2.rows[1].id)
    update_response = $client.send(Pokepay::Request::UpdateWebhook.new(
      webhook1.id,
      is_active: false
    ))
    assert_equal(webhook1.id, update_response.id)
    assert_equal(webhook1.organization_code, update_response.organization_code)
    assert_equal(webhook1.task, update_response.task)
    assert_equal(webhook1.url, update_response.url)
    assert_equal(webhook1.content_type, update_response.content_type)
    assert_equal(false, update_response.is_active)
  end
end
