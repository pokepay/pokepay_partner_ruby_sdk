# coding: utf-8
# DO NOT EDIT: File is generated by code generator.

require 'minitest/autorun'
require 'securerandom'
require "pokepay_partner_ruby_sdk"
require "inifile"

$client = Pokepay::Client.new(File.expand_path("~/.pokepay/test-config.ini"))
$inifile = IniFile.load(File.expand_path("~/.pokepay/test-config.ini"))

class CreateOrganizationTest < Minitest::Test
  def testCreateOrganization
    code = "test-org" + SecureRandom.base64(6)
    name = "テスト組織" + SecureRandom.base64(4)
    private_money_ids = ["4b138a4c-8944-4f98-a5c4-96d3c1c415eb"]
    issuer_admin_user_email = SecureRandom.base64(6) + "@pokepay-tests.jp"
    member_admin_user_email = SecureRandom.base64(6) + "@pokepay-tests.jp"
    response = $client.send(Pokepay::Request::CreateOrganization.new(
      code,
      name,
      private_money_ids,
      issuer_admin_user_email,
      member_admin_user_email
    ))
    assert_equal(code, response.code)
    assert_equal(name, response.name)
  end
  def testCreateOrganizationWithMetadata
    code = "test-org" + SecureRandom.base64(6)
    name = "テスト組織" + SecureRandom.base64(4)
    private_money_ids = ["4b138a4c-8944-4f98-a5c4-96d3c1c415eb"]
    issuer_admin_user_email = SecureRandom.base64(6) + "@pokepay-tests.jp"
    member_admin_user_email = SecureRandom.base64(6) + "@pokepay-tests.jp"
    bank_code = "1234"
    bank_name = SecureRandom.base64(4) + "銀行"
    bank_branch_code = "123"
    bank_branch_name = SecureRandom.base64(4) + "支店"
    bank_account_type = "saving"
    bank_account = "1234567"
    bank_account_holder_name = "ﾌｸｻﾞﾜﾕｷﾁ"
    contact_name = "佐藤清"
    response = $client.send(Pokepay::Request::CreateOrganization.new(
      code,
      name,
      private_money_ids,
      issuer_admin_user_email,
      member_admin_user_email,
      bank_code: bank_code,
      bank_name: bank_name,
      bank_branch_code: bank_branch_code,
      bank_branch_name: bank_branch_name,
      bank_account_type: bank_account_type,
      bank_account: bank_account,
      bank_account_holder_name: bank_account_holder_name,
      contact_name: contact_name
    ))
    assert_equal(code, response.code)
    assert_equal(name, response.name)
  end
end
